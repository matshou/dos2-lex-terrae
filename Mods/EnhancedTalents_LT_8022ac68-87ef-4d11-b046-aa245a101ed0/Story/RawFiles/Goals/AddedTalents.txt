Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_DemonStatuses(0,"HASTED");
DB_DemonStatuses(1,"SPARKING_SWINGS");
DB_DemonStatuses(2,"CLEAR_MINDED");
DB_DemonStatuses(3,"FIRE_BRAND");
DB_DemonStatuses(4,"FIRE_SKIN");
DB_DemonStatuses(5,"HOLY_FIRE");

DB_IceKingStatuses(0,"CRYOTHERAPY");
DB_IceKingStatuses(1,"REGENERATION");
DB_IceKingStatuses(2,"MAGIC_SHELL");
DB_IceKingStatuses(3,"VAMPIRISM");
DB_IceKingStatuses(4,"ICE_SKIN");
DB_IceKingStatuses(5,"FROST_AURA");
DB_IceKingStatuses(6,"HOLY_WATER");


DB_LeechableStatuses("REGENERATION");
DB_LeechableStatuses("FORTIFIED");
DB_LeechableStatuses("MAGIC_SHELL");
DB_LeechableStatuses("HASTED");
DB_LeechableStatuses("CLEAR_MINDED");
DB_LeechableStatuses("BLESSED");
DB_LeechableStatuses("FAVOURABLE_WIND");
DB_LeechableStatuses("RESTED");
DB_LeechableStatuses("ENCOURAGED");
DB_LeechableStatuses("VAMPIRISM");
DB_LeechableStatuses("ENCOURAGED");
DB_LeechableStatuses("BONE_CAGE");
DB_LeechableStatuses("DEFLECTING");
DB_LeechableStatuses("FARSIGHT");
DB_LeechableStatuses("EVADING");
DB_LeechableStatuses("DEATH_RESIST");
DB_LeechableStatuses("THICK_OF_THE_FIGHT");
DB_LeechableStatuses("FIRE_BRAND");
DB_LeechableStatuses("VENOM_COATING");
DB_LeechableStatuses("HOLY_FIRE");
DB_LeechableStatuses("HOLY_WATER");
DB_LeechableStatuses("SPARKING_SWINGS");
DB_LeechableStatuses("FIRE_SKIN");
DB_LeechableStatuses("FROST_AURA");
DB_LeechableStatuses("MEND_METAL");
DB_LeechableStatuses("ICE_SKIN");
DB_LeechableStatuses("FIRE_SKIN");
KBSECTION
IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_Packmule_844fe20e-673d-4463-9d7c-42637f449dbb",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"Carry")
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddTalent(_Player,"Carry");
CharacterAddAbility(_Player,"Perseverance",3);
DB_TalentsUnlocked(_Player,"Carry");

IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_NaturalConductor_0da3c3fc-713d-4da5-ae85-088cb3b33a23",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"NaturalConductor")
AND
CharacterGetAbility(_Player,"Aerothurge",_Value)
AND
_Value > 5
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddTalent(_Player,"NaturalConductor");
DB_TalentsUnlocked(_Player,"NaturalConductor");

IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_Fleetfooted_63f45fef-f3ba-4e70-96cf-60bf415a34c4",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"ActionPoints")
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddTalent(_Player,"ActionPoints");
DB_TalentsUnlocked(_Player,"ActionPoints");

IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_StandYourGround_3b247b91-6a26-4217-bb57-299b8953d519",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"StandYourGround")
AND
CharacterGetAbility(_Player,"WarriorLore",_Value)
AND
_Value > 5
AND
CharacterHasTalent(_Player,"Escapist",0)
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddTalent(_Player,"StandYourGround");
CharacterAddTalent(_Player,"Courageous");
DB_TalentsUnlocked(_Player,"StandYourGround");

IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_RainbowMage_ae27fc6c-7b80-41e8-a0dd-dfd2f21839bc",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"RainbowMage")
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddAbility(_Player,"FireSpecialist", 2);
CharacterAddAbility(_Player,"AirSpecialist", 2);
CharacterAddAbility(_Player,"EarthSpecialist", 2);
CharacterAddAbility(_Player,"WaterSpecialist", 2);
DB_TalentsUnlocked(_Player,"RainbowMage");

IF
CharacterUsedItemTemplate((CHARACTERGUID)_Player,"TALENTBOOK_Bully_75a95726-6dd9-4db6-be41-8848ddb641e5",_)
AND
CharacterGetTalentPoints(_Player,(INTEGER)_Int)
AND
_Int > 0
AND
NOT DB_TalentsUnlocked(_Player,"Bully")
THEN
CharacterAddTalentPoint(_Player,-1);
CharacterAddTalent(_Player,"Bully");
CharacterAddAttribute(_Player,"Strength",-3);
CharacterAddAttribute(_Player,"Intelligence",-4);
CharacterAddAttribute(_Player,"Finesse",-3);
CharacterAddTalent(_Player,"MrKnowItAll");
DB_TalentsUnlocked(_Player,"Bully");

IF
SkillCast(_Char,_FireSkill,_SkillType,"Fire")
AND
CharacterHasTalent(_Char,"Demon",1)
AND
Random(100,_Ran)
AND
_Ran > 65
THEN
TimerLaunch("ApplyDemonStatus",100);
DB_ApplyDemonStatus(_Char);

IF
TimerFinished("ApplyDemonStatus")
AND
DB_ApplyDemonStatus(_Char)
AND
Random(6,_Ran)
AND
DB_DemonStatuses(_Ran,_Status)
THEN
ApplyStatus(_Char,_Status,12.0,1,_Char);
NOT DB_DemonStatuses(_Ran,_Status);

IF
SkillCast(_Char,_WaterSkill,_SkillType,"Water")
AND
CharacterHasTalent(_Char,"IceKing",1)
AND
Random(100,_Ran)
AND
_Ran > 66
THEN
TimerLaunch("ApplyIceKingStatus",100);
DB_IceKingApply(_Char);

IF
TimerFinished("ApplyIceKingStatus")
AND
DB_IceKingApply(_Char)
AND
Random(999,_Ran)
AND
IntegerModulo(_Ran,7,_Rem)
AND
DB_IceKingStatuses(_Rem,_Status)
THEN
ApplyStatus(_Char,_Status,12.0,1,_Char);
NOT DB_IceKingApply(_Char);

IF
CharacterStatusApplied((CHARACTERGUID)_Char,"FROZEN",(CHARACTERGUID)_Source)
AND
CharacterHasTalent(_Char,"IceKing",1)
THEN
TimerLaunch("RemoveFrozenApplyPermaFrost",100);
DB_IceKingPermaFrost(_Char);

IF
TimerFinished("RemoveFrozenApplyPermaFrost")
AND
DB_IceKingPermaFrost(_Char)
THEN
RemoveStatus(_Char,"FROZEN");
RemoveStatus(_Char,"CHILLED");
ApplyStatus(_Char,"PERMAFROST",6.0,1);
NOT DB_IceKingPermaFrost(_Char);

IF
CharacterStatusApplied((CHARACTERGUID)_Char,"NECROFIRE",(CHARACTERGUID)_Source)
AND
CharacterHasTalent(_Char,"Demon",1)
AND
Random(18,_Ran)
AND
DB_DemonStatuses(_Ran,_Status)
THEN
ApplyStatus(_Char,_Status,12.0,1,_Char);

IF
CharacterReceivedDamage(_Char,_Perc,(CHARACTERGUID)_Source)
AND
CharacterHasTalent(_Source,"Leech",1)
AND
DB_LeechableStatuses(_Status)
AND
HasActiveStatus(_Char,_Status,1)
AND
GetStatusTurns(_Char,_Status,_Turns)
AND
_Turns != -1
AND
IntegerMin(5,_Turns,_TurnsMax)
AND
IntegerProduct(_TurnsMax,6,_TurnsSeconds)
AND
Real(_TurnsSeconds,_TurnsReal)
AND
Random(10,_ran)
AND
_ran == 1
THEN
ApplyStatus(_Source,_Status,_TurnsReal,1);

IF
CharacterUsedItem(_Char,_Item)
AND
CharacterHasTalent(_Char,"RangerLoreArrowRecover",1)
AND
IsTagged(_Item,"DRINK",1)
AND
Random(3,_Random)
AND
_Random == 1
AND
GetTemplate(_Item,_Temp)
THEN
ItemTemplateAddTo(_Temp,_Char,1,1);

IF
CharacterUsedItem(_Char,_Item)
AND
CharacterHasTalent(_Char,"RangerLoreArrowRecover",1)
AND
IsTagged(_Item,"FOOD",1)
AND
Random(3,_Random)
AND
_Random == 1
AND
GetTemplate(_Item,_Temp)
THEN
ItemTemplateAddTo(_Temp,_Char,1,1);

IF
SkillCast(_Char,"Teleportation_ResurrectScroll",_SkillType,_Element)
AND
CharacterHasTalent(_Char,"RangerLoreArrowRecover",1)
AND
Random(3,_Random)
AND
_Random == 1
THEN
ItemTemplateAddTo("Scroll_Skill_Source_Resurrect_60180909-ee47-4d1c-b81c-e43bd8fdce1e",_Char,1,1);

IF
CharacterStatusApplied((CHARACTERGUID)_Player,"WEB",(CHARACTERGUID)_Char)
AND
CharacterHasTalent(_Player,"Escapist",1)
AND
GetStatusTurns(_Player,"WEB",_Turns)
AND
IntegerProduct(_Turns,6,_TurnsSeconds)
AND
Real(_TurnsSeconds,_RealTurns)
THEN
ApplyStatus(_Player,"WEB_ESCAPIST",_RealTurns,1);

IF
CharacterStatusApplied((CHARACTERGUID)_Player,"ENTANGLED",(CHARACTERGUID)_Char)
AND
CharacterHasTalent(_Player,"Escapist",1)
AND
GetStatusTurns(_Player,"ENTANGLED",_Turns)
AND
IntegerProduct(_Turns,6,_TurnsSeconds)
AND
Real(_TurnsSeconds,_RealTurns)
THEN
ApplyStatus(_Player,"ENTANGLED_ESCAPIST",_RealTurns,1);

IF
CharacterStatusApplied((CHARACTERGUID)_Player,"CRIPPLED",(CHARACTERGUID)_Char)
AND
CharacterHasTalent(_Player,"Escapist",1)
AND
GetStatusTurns(_Player,"CRIPPLED",_Turns)
AND
IntegerProduct(_Turns,6,_TurnsSeconds)
AND
Real(_TurnsSeconds,_RealTurns)
THEN
ApplyStatus(_Player,"CRIPPLED_ESCAPIST",_RealTurns,1);

IF
CharacterStatusApplied((CHARACTERGUID)_Player,"FIRST_AID",(CHARACTERGUID)_Char)
THEN
RemoveStatus(_Player,"CRIPPLED_ESCAPIST");

IF
CharacterStatusApplied((CHARACTERGUID)_Player,"RESTED",(CHARACTERGUID)_Char)
THEN
RemoveStatus(_Player,"CRIPPLED_ESCAPIST");

IF
CharacterUnlockedTalent(_Player,"DualWieldingDodging")
THEN
CharacterAddTalent(_Player,"Flanking");

IF
CharacterUnlockedTalent(_Player,"ExtraStatPoints")
THEN
ApplyStatus(_Player,"BIGGERANDBETTER",-1.0,1,_Player);
TimerLaunch("RegularBiggerBetterCheck",240000);
DB_UnlockedBiggerBetter(_Player);

IF
CharacterLockedTalent(_Player,"ExtraStatPoints")
THEN
RemoveStatus(_Player,"BIGGERANDBETTER");
NOT DB_UnlockedBiggerBetter(_Player);

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
DB_IsPlayer(_Player)
AND
CharacterHasTalent(_Player,"ExtraStatPoints",1)
THEN
ApplyStatus(_Player,"BIGGERANDBETTER",-1.0,1,_Player);
TimerLaunch("RegularBiggerBetterCheck",240000);
DB_UnlockedBiggerBetter(_Player);

IF
TimerFinished("RegularBiggerBetterCheck")
AND
DB_UnlockedBiggerBetter(_Player)
AND
CharacterHasTalent(_Player,"ExtraStatPoints",1)
THEN
ApplyStatus(_Player,"BIGGERANDBETTER",-1.0,1,_Player);
TimerLaunch("RegularBiggerBetterCheck",240000);

IF
CharacterResurrected(_Player)
AND
CharacterHasTalent(_Player,"ExtraStatPoints",1)
THEN
TimerLaunch("ApplyBiggerBetter",1000);
DB_BiggerAndBetter(_Player);

IF
TimerFinished("ApplyBiggerBetter")
AND
DB_BiggerAndBetter(_Player)
AND
CharacterHasTalent(_Player,"ExtraStatPoints",1)
THEN
ApplyStatus(_Player,"BIGGERANDBETTER",-1.0,1,_Player);

PROC
Proc_HomesteadTeleportAfterMirror((CHARACTERGUID)_Player,(ITEMGUID)_Mirror,(TRIGGERGUID)_Trigger)
AND
CharacterHasTalent(_Player,"DualWieldingDodging",0)
AND
CharacterHasTalent(_Player,"Flanking",1)
THEN
CharacterRemoveTalent(_Player,"Flanking");

PROC
Proc_HomesteadTeleportAfterMirror((CHARACTERGUID)_Player,(ITEMGUID)_Mirror,(TRIGGERGUID)_Trigger)
AND
CharacterHasTalent(_Player,"ExtraStatPoints",0)
THEN
RemoveStatus(_Player,"BIGGERANDBETTER");

IF
CharacterKilledBy(_Char,_KillerOwner,_Killer)
AND
CharacterHasTalent(_Killer,"Executioner",1)
THEN
CharacterAddActionPoints(_Killer,1); 
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
